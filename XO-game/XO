import tkinter as tk
from tkinter import messagebox
import random

class TicTacToe:
    def __init__(self, master):
        self.master = master
        master.title("Tic Tac Toe")
        self.board = [""] * 9
        self.player = "X"
        self.game_over = False
        self.buttons = []
        self.create_board()

    def create_board(self):
        for i in range(3):
            row = []
            for j in range(3):
                button = tk.Button(self.master, text="", width=10, height=5, command=lambda row=i, col=j: self.clicked(row, col))
                button.grid(row=i, column=j)
                row.append(button)
            self.buttons.append(row)
        restart_button = tk.Button(self.master, text="Restart", command=self.restart)
        restart_button.grid(row=3, column=1)

    def clicked(self, row, col):
        if self.buttons[row][col]["text"] == "" and not self.game_over:
            self.buttons[row][col]["text"] = self.player
            self.board[row * 3 + col] = self.player
            if self.check_winner():
                self.game_over = True
                self.show_message(f"{self.player} wins!")
            elif "" not in self.board:
                self.game_over = True
                self.show_message("Draw!")
            else:
                self.player = "O"
                self.ai_move()

    def ai_move(self):
        best_score = -1000
        best_move = None
        for i in range(9):
            if self.board[i] == "":
                self.board[i] = "O"
                score = self.minimax(False)
                self.board[i] = ""
                if score > best_score:
                    best_score = score
                    best_move = i
        row = best_move // 3
        col = best_move % 3
        self.buttons[row][col]["text"] = "O"
        self.board[best_move] = "O"
        if self.check_winner():
            self.game_over = True
            self.show_message(f"{self.player} wins!")
        elif "" not in self.board:
            self.game_over = True
            self.show_message("Draw!")
        else:
            self.player = "X"

    def minimax(self, is_maximizing):
        if self.check_winner():
            if self.player == "O":
                return 1
            else:
                return -1
        elif "" not in self.board:
            return 0

        if is_maximizing:
            best_score = -1000
            for i in range(9):
                if self.board[i] == "":
                    self.board[i] = "O"
                    score = self.minimax(False)
                    self.board[i] = ""
                    best_score = max(score, best_score)
            return best_score
        else:
            best_score = 1000
            for i in range(9):
                if self.board[i] == "":
                    self.board[i] = "X"
                    score = self.minimax(True)
                    self.board[i] = ""
                    best_score = min(score, best_score)
            return best_score

    def check_winner(self):
        for i in range(0, 9, 3):
            if self.board[i] == self.board[i + 1] == self.board[i + 2] != "":
                return True
        for i in range(3):
            if self.board[i] == self.board[i + 3] == self.board[i + 6] != "":
                return True
        if self.board[0] == self.board[4] == self.board[8] != "":
            return True
        if self.board[2] == self.board[4] == self.board[6] != "":
            return True
        return False

    def show_message(self, message):
        messagebox.showinfo("Game Over", message)

    def restart(self):
        for i in range(3):
            for j in range(3):
                self.buttons[i][j]["text"] = ""
                self.board[i * 3 + j] = ""
        self.player = "X"
        self.game_over = False

if __name__ == "__main__":
    root = tk.Tk()
    game = TicTacToe(root)
    root.mainloop()